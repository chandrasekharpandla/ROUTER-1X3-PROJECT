|router_reg
clock => parity_done~reg0.CLK
clock => low_pkt_valid~reg0.CLK
clock => err~reg0.CLK
clock => packet_parity[0].CLK
clock => packet_parity[1].CLK
clock => packet_parity[2].CLK
clock => packet_parity[3].CLK
clock => packet_parity[4].CLK
clock => packet_parity[5].CLK
clock => packet_parity[6].CLK
clock => packet_parity[7].CLK
clock => internal_parity[0].CLK
clock => internal_parity[1].CLK
clock => internal_parity[2].CLK
clock => internal_parity[3].CLK
clock => internal_parity[4].CLK
clock => internal_parity[5].CLK
clock => internal_parity[6].CLK
clock => internal_parity[7].CLK
clock => fifo_full_state[0].CLK
clock => fifo_full_state[1].CLK
clock => fifo_full_state[2].CLK
clock => fifo_full_state[3].CLK
clock => fifo_full_state[4].CLK
clock => fifo_full_state[5].CLK
clock => fifo_full_state[6].CLK
clock => fifo_full_state[7].CLK
clock => header[0].CLK
clock => header[1].CLK
clock => header[2].CLK
clock => header[3].CLK
clock => header[4].CLK
clock => header[5].CLK
clock => header[6].CLK
clock => header[7].CLK
clock => dout[0]~reg0.CLK
clock => dout[1]~reg0.CLK
clock => dout[2]~reg0.CLK
clock => dout[3]~reg0.CLK
clock => dout[4]~reg0.CLK
clock => dout[5]~reg0.CLK
clock => dout[6]~reg0.CLK
clock => dout[7]~reg0.CLK
resetn => err.OUTPUTSELECT
resetn => low_pkt_valid.OUTPUTSELECT
resetn => parity_done.OUTPUTSELECT
resetn => dout.OUTPUTSELECT
resetn => dout.OUTPUTSELECT
resetn => dout.OUTPUTSELECT
resetn => dout.OUTPUTSELECT
resetn => dout.OUTPUTSELECT
resetn => dout.OUTPUTSELECT
resetn => dout.OUTPUTSELECT
resetn => dout.OUTPUTSELECT
resetn => header.OUTPUTSELECT
resetn => header.OUTPUTSELECT
resetn => header.OUTPUTSELECT
resetn => header.OUTPUTSELECT
resetn => header.OUTPUTSELECT
resetn => header.OUTPUTSELECT
resetn => header.OUTPUTSELECT
resetn => header.OUTPUTSELECT
resetn => internal_parity.OUTPUTSELECT
resetn => internal_parity.OUTPUTSELECT
resetn => internal_parity.OUTPUTSELECT
resetn => internal_parity.OUTPUTSELECT
resetn => internal_parity.OUTPUTSELECT
resetn => internal_parity.OUTPUTSELECT
resetn => internal_parity.OUTPUTSELECT
resetn => internal_parity.OUTPUTSELECT
resetn => packet_parity.OUTPUTSELECT
resetn => packet_parity.OUTPUTSELECT
resetn => packet_parity.OUTPUTSELECT
resetn => packet_parity.OUTPUTSELECT
resetn => packet_parity.OUTPUTSELECT
resetn => packet_parity.OUTPUTSELECT
resetn => packet_parity.OUTPUTSELECT
resetn => packet_parity.OUTPUTSELECT
resetn => fifo_full_state[0].ENA
resetn => fifo_full_state[1].ENA
resetn => fifo_full_state[2].ENA
resetn => fifo_full_state[3].ENA
resetn => fifo_full_state[4].ENA
resetn => fifo_full_state[5].ENA
resetn => fifo_full_state[6].ENA
resetn => fifo_full_state[7].ENA
pkt_valid => always0.IN0
pkt_valid => always1.IN0
pkt_valid => always5.IN0
data_in[0] => fifo_full_state.DATAB
data_in[0] => dout.DATAB
data_in[0] => header.DATAB
data_in[0] => internal_parity.IN1
data_in[0] => packet_parity.DATAB
data_in[0] => Equal0.IN1
data_in[1] => fifo_full_state.DATAB
data_in[1] => dout.DATAB
data_in[1] => header.DATAB
data_in[1] => internal_parity.IN1
data_in[1] => packet_parity.DATAB
data_in[1] => Equal0.IN0
data_in[2] => fifo_full_state.DATAB
data_in[2] => dout.DATAB
data_in[2] => header.DATAB
data_in[2] => internal_parity.IN1
data_in[2] => packet_parity.DATAB
data_in[3] => fifo_full_state.DATAB
data_in[3] => dout.DATAB
data_in[3] => header.DATAB
data_in[3] => internal_parity.IN1
data_in[3] => packet_parity.DATAB
data_in[4] => fifo_full_state.DATAB
data_in[4] => dout.DATAB
data_in[4] => header.DATAB
data_in[4] => internal_parity.IN1
data_in[4] => packet_parity.DATAB
data_in[5] => fifo_full_state.DATAB
data_in[5] => dout.DATAB
data_in[5] => header.DATAB
data_in[5] => internal_parity.IN1
data_in[5] => packet_parity.DATAB
data_in[6] => fifo_full_state.DATAB
data_in[6] => dout.DATAB
data_in[6] => header.DATAB
data_in[6] => internal_parity.IN1
data_in[6] => packet_parity.DATAB
data_in[7] => fifo_full_state.DATAB
data_in[7] => dout.DATAB
data_in[7] => header.DATAB
data_in[7] => internal_parity.IN1
data_in[7] => packet_parity.DATAB
fifo_full => always0.IN0
fifo_full => always0.IN0
rst_int_reg => low_pkt_valid.OUTPUTSELECT
detect_add => always0.IN1
detect_add => internal_parity.OUTPUTSELECT
detect_add => internal_parity.OUTPUTSELECT
detect_add => internal_parity.OUTPUTSELECT
detect_add => internal_parity.OUTPUTSELECT
detect_add => internal_parity.OUTPUTSELECT
detect_add => internal_parity.OUTPUTSELECT
detect_add => internal_parity.OUTPUTSELECT
detect_add => internal_parity.OUTPUTSELECT
detect_add => parity_done.OUTPUTSELECT
detect_add => internal_parity.OUTPUTSELECT
detect_add => internal_parity.OUTPUTSELECT
detect_add => internal_parity.OUTPUTSELECT
detect_add => internal_parity.OUTPUTSELECT
detect_add => internal_parity.OUTPUTSELECT
detect_add => internal_parity.OUTPUTSELECT
detect_add => internal_parity.OUTPUTSELECT
detect_add => internal_parity.OUTPUTSELECT
detect_add => packet_parity.OUTPUTSELECT
detect_add => packet_parity.OUTPUTSELECT
detect_add => packet_parity.OUTPUTSELECT
detect_add => packet_parity.OUTPUTSELECT
detect_add => packet_parity.OUTPUTSELECT
detect_add => packet_parity.OUTPUTSELECT
detect_add => packet_parity.OUTPUTSELECT
detect_add => packet_parity.OUTPUTSELECT
ld_state => always0.IN1
ld_state => always0.IN1
ld_state => always1.IN1
ld_state => always5.IN1
laf_state => dout.OUTPUTSELECT
laf_state => dout.OUTPUTSELECT
laf_state => dout.OUTPUTSELECT
laf_state => dout.OUTPUTSELECT
laf_state => dout.OUTPUTSELECT
laf_state => dout.OUTPUTSELECT
laf_state => dout.OUTPUTSELECT
laf_state => dout.OUTPUTSELECT
laf_state => always5.IN1
full_state => always1.IN1
lfd_state => dout.OUTPUTSELECT
lfd_state => dout.OUTPUTSELECT
lfd_state => dout.OUTPUTSELECT
lfd_state => dout.OUTPUTSELECT
lfd_state => dout.OUTPUTSELECT
lfd_state => dout.OUTPUTSELECT
lfd_state => dout.OUTPUTSELECT
lfd_state => dout.OUTPUTSELECT
lfd_state => fifo_full_state.OUTPUTSELECT
lfd_state => fifo_full_state.OUTPUTSELECT
lfd_state => fifo_full_state.OUTPUTSELECT
lfd_state => fifo_full_state.OUTPUTSELECT
lfd_state => fifo_full_state.OUTPUTSELECT
lfd_state => fifo_full_state.OUTPUTSELECT
lfd_state => fifo_full_state.OUTPUTSELECT
lfd_state => fifo_full_state.OUTPUTSELECT
lfd_state => internal_parity.OUTPUTSELECT
lfd_state => internal_parity.OUTPUTSELECT
lfd_state => internal_parity.OUTPUTSELECT
lfd_state => internal_parity.OUTPUTSELECT
lfd_state => internal_parity.OUTPUTSELECT
lfd_state => internal_parity.OUTPUTSELECT
lfd_state => internal_parity.OUTPUTSELECT
lfd_state => internal_parity.OUTPUTSELECT
parity_done <= parity_done~reg0.DB_MAX_OUTPUT_PORT_TYPE
low_pkt_valid <= low_pkt_valid~reg0.DB_MAX_OUTPUT_PORT_TYPE
err <= err~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[0] <= dout[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[1] <= dout[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[2] <= dout[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[3] <= dout[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[4] <= dout[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[5] <= dout[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[6] <= dout[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[7] <= dout[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


